* 6809 assembly program generated by cmoc 0.1.85


	SECTION	code


___va_arg	IMPORT
_abs	IMPORT
_adddww	IMPORT
_atoff	IMPORT
_atoi	IMPORT
_atol	IMPORT
_atoui	IMPORT
_atoul	IMPORT
_bsearch	IMPORT
_cmpdww	IMPORT
_delay	IMPORT
_divdwb	IMPORT
_divdww	IMPORT
_divmod16	IMPORT
_divmod8	IMPORT
_dwtoa	IMPORT
_enableCMOCFloatSupport	IMPORT
_exit	IMPORT
_ftoa	IMPORT
_isalnum	IMPORT
_isalpha	IMPORT
_isdigit	IMPORT
_isspace	IMPORT
_itoa10	IMPORT
_labs	IMPORT
_ltoa10	IMPORT
_memchr	IMPORT
_memcmp	IMPORT
_memcpy	IMPORT
_memichr	IMPORT
_memicmp	IMPORT
_memmove	IMPORT
_memset	IMPORT
_memset16	IMPORT
_mulwb	IMPORT
_mulww	IMPORT
_printf	IMPORT
_putchar	IMPORT
_putstr	IMPORT
_qsort	IMPORT
_rand	IMPORT
_readline	IMPORT
_readword	IMPORT
_sbrk	IMPORT
_sbrkmax	IMPORT
_setConsoleOutHook	IMPORT
_set_null_ptr_handler	IMPORT
_set_stack_overflow_handler	IMPORT
_sprintf	IMPORT
_sqrt16	IMPORT
_sqrt32	IMPORT
_srand	IMPORT
_strcat	IMPORT
_strchr	IMPORT
_strcmp	IMPORT
_strcpy	IMPORT
_stricmp	IMPORT
_strlen	IMPORT
_strlwr	IMPORT
_strncmp	IMPORT
_strncpy	IMPORT
_strstr	IMPORT
_strtof	IMPORT
_strtol	IMPORT
_strtoul	IMPORT
_strupr	IMPORT
_subdww	IMPORT
_tolower	IMPORT
_toupper	IMPORT
_ultoa10	IMPORT
_utoa10	IMPORT
_vprintf	IMPORT
_vsprintf	IMPORT
_zerodw	IMPORT
_strreplace	EXPORT


*******************************************************************************

* FUNCTION strreplace(): defined at Useful.c:6
_strreplace	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-6,S
* Formal parameter(s):
*      4,U:    2 bytes: s: char *
*      6,U:    2 bytes: s1: const char *
*      8,U:    2 bytes: s2: const char *
* Local non-static variable(s):
*     -6,U:    2 bytes: len1: unsigned int
*     -4,U:    2 bytes: len2: unsigned int
*     -2,U:    2 bytes: p: char *
* Line Useful.c:7: init of variable p
* Line Useful.c:7: function call: strstr()
	LDD	6,U		variable `s1', declared at Useful.c:6
	PSHS	B,A		argument 2 of strstr(): const char *
	LDD	4,U		variable `s', declared at Useful.c:6
	PSHS	B,A		argument 1 of strstr(): char *
	LBSR	_strstr
	LEAS	4,S
	STD	-2,U		variable p
* Line Useful.c:8: if
* optim: stripOpToDeadReg
* optim: stripOpToDeadReg
* Emitted no code to cast `int' to `void *'
* PSHS B,A optim: optimizeStackOperations1
* optim: storeLoad
* optim: loadCmpZeroBeqOrBne
	LBEQ	L00085		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00084 removed
* Line Useful.c:8
* Line Useful.c:9: init of variable len1
* Line Useful.c:9: function call: strlen()
	LDD	6,U		variable `s1', declared at Useful.c:6
	PSHS	B,A		argument 1 of strlen(): const char *
	LBSR	_strlen
	LEAS	2,S
	STD	-6,U		variable len1
* Line Useful.c:10: init of variable len2
* Line Useful.c:10: function call: strlen()
	LDD	8,U		variable `s2', declared at Useful.c:6
	PSHS	B,A		argument 1 of strlen(): const char *
	LBSR	_strlen
	LEAS	2,S
	STD	-4,U		variable len2
* Line Useful.c:11: if
	LDD	-6,U		variable len1
	CMPD	-4,U		variable len2
	BEQ	L00087		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00086 removed
* Line Useful.c:12
* Line Useful.c:12: function call: memmove()
	CLRA
	LDB	#$01		decimal 1 signed
	PSHS	B,A
* Line Useful.c:12: function call: strlen()
* optim: optimizeStackOperations4
* optim: optimizeStackOperations4
	LDD	-2,U		variable `p', declared at Useful.c:7
	ADDD	-6,U		optim: optimizeStackOperations4
	PSHS	B,A		argument 1 of strlen(): char *
	LBSR	_strlen
	LEAS	2,S
	ADDD	,S++
	PSHS	B,A		argument 3 of memmove(): unsigned int
* optim: optimizeStackOperations4
* optim: optimizeStackOperations4
	LDD	-2,U		variable `p', declared at Useful.c:7
	ADDD	-6,U		optim: optimizeStackOperations4
	PSHS	B,A		argument 2 of memmove(): char *
* optim: optimizeStackOperations4
* optim: optimizeStackOperations4
	LDD	-2,U		variable `p', declared at Useful.c:7
	ADDD	-4,U		optim: optimizeStackOperations4
	PSHS	B,A		argument 1 of memmove(): char *
	LBSR	_memmove
	LEAS	6,S
L00087	EQU	*		else clause of if() started at Useful.c:11
* Useless label L00088 removed
* Line Useful.c:13: function call: memcpy()
	LDD	-4,U		variable `len2', declared at Useful.c:10
	PSHS	B,A		argument 3 of memcpy(): unsigned int
	LDD	8,U		variable `s2', declared at Useful.c:6
	PSHS	B,A		argument 2 of memcpy(): const char *
	LDD	-2,U		variable `p', declared at Useful.c:7
	PSHS	B,A		argument 1 of memcpy(): char *
	LBSR	_memcpy
	LEAS	6,S
	BRA	L00089		jump over else clause
L00085	EQU	*		else clause of if() started at Useful.c:8
* Line Useful.c:14
* Line Useful.c:15: return with value
	CLRA
	CLRB
* Emitted no code to cast `int' to `void *'
* Emitted no code to cast `void *' to `char *'
	BRA	L00078		return (Useful.c:15)
L00089	EQU	*		end of if() started at Useful.c:8
* Line Useful.c:17: return with value
	LDD	4,U		variable `s', declared at Useful.c:6
* optim: branchToNextLocation
L00078	EQU	*		end of strreplace()
	LEAS	,U
	PULS	U,PC
* END FUNCTION strreplace(): defined at Useful.c:6
funcend_strreplace	EQU *
funcsize_strreplace	EQU	funcend_strreplace-_strreplace
_changePrintfFormat	EXPORT


*******************************************************************************

* FUNCTION changePrintfFormat(): defined at Useful.c:22
_changePrintfFormat	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-2,S
* Formal parameter(s):
*      4,U:    2 bytes: wanted: char *
* Local non-static variable(s):
*     -2,U:    2 bytes: b: char *
* Line Useful.c:24: init of variable b
* Line Useful.c:24: function call: strreplace()
	LEAX	S00082,PCR	"%ld"
	TFR	X,D
* Emitted no code to cast `const char[]' to `const char *'
	PSHS	B,A		argument 3 of strreplace(): const char *
	LEAX	S00081,PCR	"%lu"
	TFR	X,D
* Emitted no code to cast `const char[]' to `const char *'
	PSHS	B,A		argument 2 of strreplace(): const char *
	LDD	4,U		variable `wanted', declared at Useful.c:22
	PSHS	B,A		argument 1 of strreplace(): char *
	LBSR	_strreplace
	LEAS	6,S
	STD	-2,U		variable b
* Line Useful.c:25: while
	BRA	L00091		jump to while condition
L00090	EQU	*		while body
* Line Useful.c:26: assignment: =
* Line Useful.c:26: function call: strreplace()
	LEAX	S00082,PCR	"%ld"
	TFR	X,D
* Emitted no code to cast `const char[]' to `const char *'
	PSHS	B,A		argument 3 of strreplace(): const char *
	LEAX	S00081,PCR	"%lu"
	TFR	X,D
* Emitted no code to cast `const char[]' to `const char *'
	PSHS	B,A		argument 2 of strreplace(): const char *
	LDD	4,U		variable `wanted', declared at Useful.c:22
	PSHS	B,A		argument 1 of strreplace(): char *
	LBSR	_strreplace
	LEAS	6,S
	STD	-2,U
L00091	EQU	*		while condition at Useful.c:25
	LDD	-2,U		variable `b', declared at Useful.c:24
* optim: loadCmpZeroBeqOrBne
	BNE	L00090
* optim: branchToNextLocation
* Useless label L00092 removed
* Useless label L00079 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION changePrintfFormat(): defined at Useful.c:22
funcend_changePrintfFormat	EQU *
funcsize_changePrintfFormat	EQU	funcend_changePrintfFormat-_changePrintfFormat
_logOut	EXPORT


*******************************************************************************

* FUNCTION logOut(): defined at Useful.c:45
_logOut	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-130,S
* Formal parameter(s):
*      5,U:    1 byte : withCr: char
*      6,U:    2 bytes: format: const char *
* Local non-static variable(s):
*   -130,U:    2 bytes: arg: char *
*   -128,U:  128 bytes: f: char[]
* Line Useful.c:50: function call: strcpy()
	LDD	6,U		variable `format', declared at Useful.c:45
	PSHS	B,A		argument 2 of strcpy(): const char *
	LEAX	-128,U		address of array f
	PSHS	X		argument 1 of strcpy(): char[]
	LBSR	_strcpy
	LEAS	4,S
* Line Useful.c:51: function call: changePrintfFormat()
	LEAX	-128,U		address of array f
	PSHS	X		argument 1 of changePrintfFormat(): char[]
	LBSR	_changePrintfFormat
	LEAS	2,S
* Line Useful.c:55: do-while
* Useless label L00093 removed
* Line Useful.c:55: assignment: =
* optim: optimizeStackOperations5
* optim: optimizeStackOperations5
* optim: optimizeStackOperations5
	LEAX	6,U		variable `format', declared at Useful.c:45
	TFR	X,D		address-of operator
* Emitted no code to cast `const char **' to `char *'
	ADDD	#$02		optim: optimizeStackOperations5
	STD	-130,U
* Useless label L00095 removed
* Line Useful.c:59: function call: vprintf()
* optim: storeLoad
	PSHS	B,A		argument 2 of vprintf(): char *
	LDD	6,U		variable `format', declared at Useful.c:45
	PSHS	B,A		argument 1 of vprintf(): const char *
	LBSR	_vprintf
	LEAS	4,S
* Line Useful.c:61: do-while
* Useless label L00096 removed
* Useless label L00098 removed
* Line Useful.c:63: if
	LDB	5,U		variable `withCr', declared at Useful.c:45
* optim: loadCmpZeroBeqOrBne
	BEQ	L00100		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00099 removed
* Line Useful.c:63
* Line Useful.c:65: function call: printf()
	LEAX	S00083,PCR	"\n"
	PSHS	X		argument 1 of printf(): const char[]
	LBSR	_printf
	LEAS	2,S
L00100	EQU	*		else clause of if() started at Useful.c:63
* Useless label L00101 removed
* Useless label L00080 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION logOut(): defined at Useful.c:45
funcend_logOut	EQU *
funcsize_logOut	EQU	funcend_logOut-_logOut


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*


*******************************************************************************

* STRING LITERALS
S00081	EQU	*
	FCC	"%lu"
	FCB	0
S00082	EQU	*
	FCC	"%ld"
	FCB	0
S00083	EQU	*
	FCB	$0A
	FCB	0
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 7 utility routine(s).
_memcpy	IMPORT
_memmove	IMPORT
_printf	IMPORT
_strcpy	IMPORT
_strlen	IMPORT
_strstr	IMPORT
_vprintf	IMPORT


*******************************************************************************

	END
